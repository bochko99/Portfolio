buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.5"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }

}

plugins {
    id 'groovy'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.0'
}

apply plugin: 'io.qameta.allure'
apply plugin: 'maven-publish'

group 'com.crypterium'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/ethereum/maven/" }
}

dependencies {
    compile files('libs/sqljdbc42.jar')
    implementation('org.ethereum:ethereumj-core:1.9.+')
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile 'io.rest-assured:json-path:3.2.0'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0.pr4'
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"

    compile group: 'org.apache.poi', name: 'poi', version: '4.0.1'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.0.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.1.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-core', version: '5.1.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '5.1.4.RELEASE'
    testCompile("io.rest-assured:rest-assured:3.2.0")
    testCompile 'io.rest-assured:json-schema-validator:3.2.0'
    testCompile 'io.rest-assured:json-schema-validator:3.2.0'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

// Jupiter
dependencies {
    testCompile("org.junit.jupiter:junit-jupiter-api:5.4.0")
    testCompile("org.junit.jupiter:junit-jupiter-params:5.4.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.4.0")
}

// Vintage
dependencies {
    testCompile("junit:junit:4.12")
    testRuntime("org.junit.vintage:junit-vintage-engine:5.2.0")
}

// Allure
dependencies {
    compile group: 'io.qameta.allure', name: 'allure-rest-assured', version: '2.8.1'
//    compile group: 'io.qameta.allure', name: 'allure-junit4', version: '2.8.1'
    compile group: 'io.qameta.allure', name: 'allure-junit5', version: '2.8.1'
}

allure {
    autoconfigure = true
    aspectjweaver = true
    version = "2.3.1"
}

task increment(type: IncrementTask)
task update(type: UpdateParametersTask)

task jarTest(type: Jar) {
    from sourceSets.test.output
    classifier = 'test'
}

configurations {
    testOutput
}

artifacts {
    testOutput jarTest
}


test {
    systemProperties = [
            'junit.jupiter.execution.parallel.enabled': 'true',
            'junit.jupiter.execution.parallel.mode.default': 'concurrent'
    ]
    useJUnitPlatform()
//    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    testLogging {
        events "passed", "skipped", "failed"
    }
}

apply plugin: "com.jfrog.artifactory"

artifactory {
    contextUrl = 'https://artifactory.testessential.net/artifactory'
    publish {
        repository {
            repoKey = 'libs-release-local' // The Artifactory repository key to publish to
            username = "${artifactory_user}" // The publisher user name
            password = "${artifactory_password}" // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team': 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
            maven = true
        }
    }

}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}