{
	"info": {
		"_postman_id": "2597fa17-18c7-4bea-93e5-a3acc241640f",
		"name": "Auth WS MASTER",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create-users, login and verify",
			"item": [
				{
					"name": "createUserA",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 201\", () => {",
									"    pm.expect(pm.response.code).be.equal(201);",
									"    console.log(pm.response.json().id);",
									"})",
									"",
									"tests[\"createUser Schema Validation\"] = tv4.validate(pm.response.json(), JSON.parse(environment.createUserSchema));",
									"console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"{{UserALogin}}\",\n  \"password\": \"1q2w3e4r\",\n  \"name\": {\n    \"firstName\": \"User\",\n    \"lastName\": \"A\",\n    \"middleName\": \"\"\n  },\n  \"email\": \"{{UserAEmail}}\",\n  \"birthday\": \"\",\n  \"citizenship\": \"\",\n  \"addresses\": [\n    {\n      \"addressType\": \"HOME\",\n      \"country\": \"\",\n      \"city\": \"\",\n      \"addressLine\": \"\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUserB",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eac69e53-9b1d-46ed-8ad7-4a3eab1b0715",
								"exec": [
									"pm.test(\"should return 201\", () => {",
									"    pm.expect(pm.response.code).be.equal(201);",
									"    console.log(pm.response.json().id);",
									"})",
									"",
									"tests[\"createUser Schema Validation\"] = tv4.validate(pm.response.json(), JSON.parse(environment.createUserSchema));",
									"console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"{{UserBLogin}}\",\n  \"password\": \"1q2w3e4r\",\n  \"name\": {\n    \"firstName\": \"Tester\",\n    \"lastName\": \"Crypterium\",\n    \"middleName\": \"\"\n  },\n  \"email\": \"{{UserBEmail}}\",\n  \"birthday\": \"1993-10-17\",\n  \"citizenship\": \"RUS\",\n  \"addresses\": [\n    {\n      \"addressType\": \"HOME\",\n      \"country\": \"Russia\",\n      \"city\": \"Moscow\",\n      \"addressLine\": \"QQqweqweqwe\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser - 400 (One contact must present)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f02d901-1666-41f0-909e-f7d8f7353c24",
								"exec": [
									"pm.test(\"should return 400\", () => {",
									"    pm.expect(pm.response.code).be.eql(400);",
									"})",
									"",
									"pm.test(\"Contacts: At least one contact must present\", () => {",
									"    pm.expect(pm.response.json().description).be.eql(\"Contacts: At least one contact must present\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"asdqwasdq1dasdasdasdaasfga\",\n  \"password\": \"Qdsq2Q141f\",\n  \"name\": {\n    \"firstName\": \"Tester\",\n    \"lastName\": \"Crypterium\",\n    \"middleName\": \"Otchestvo\"\n  },\n  \"birthday\": \"1993-10-17\",\n  \"citizenship\": \"RUS\",\n  \"addresses\": [\n    {\n      \"addressType\": \"HOME\",\n      \"country\": \"Russia\",\n      \"city\": \"Moscow\",\n      \"addressLine\": \"QQqweqweqwe\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser - 400 (No login)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f02d901-1666-41f0-909e-f7d8f7353c24",
								"exec": [
									"pm.test(\"should return 400\", () => {",
									"    pm.expect(pm.response.code).be.eql(400);",
									"})",
									"",
									"pm.test(\"Field login is required\", () => {",
									"    pm.expect(pm.response.json().description).be.eql(\"Field login is required\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"Qdsq2Q141f\",\n  \"name\": {\n    \"firstName\": \"Tester\",\n    \"lastName\": \"Crypterium\",\n    \"middleName\": \"Otchestvo\"\n  },\n  \"email\": \"dsfdfsgdfjfdgdfhfgjdfgdfh@crypterium.com\",\n  \"phone\" : \"1\",\n  \"birthday\": \"1993-10-17\",\n  \"citizenship\": \"RUS\",\n  \"addresses\": [\n    {\n      \"addressType\": \"HOME\",\n      \"country\": \"Russia\",\n      \"city\": \"Moscow\",\n      \"addressLine\": \"QQqweqweqwe\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser - 400 (No Password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f02d901-1666-41f0-909e-f7d8f7353c24",
								"exec": [
									"pm.test(\"should return 400\", () => {",
									"    pm.expect(pm.response.code).be.eql(400);",
									"})",
									"",
									"pm.test(\"Field password is required\", () => {",
									"    pm.expect(pm.response.json().description).be.eql(\"Field password is required\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"asdqwdasdasdasdaasfga\",\n  \"name\": {\n    \"firstName\": \"Tester\",\n    \"lastName\": \"Crypterium\",\n    \"middleName\": \"Otchestvo\"\n  },\n  \"email\": \"dsfdfsgdfjfdgdfhfgjdfgdfh@crypterium.com\",\n  \"phone\" : \"1\",\n  \"birthday\": \"1993-10-17\",\n  \"citizenship\": \"RUS\",\n  \"addresses\": [\n    {\n      \"addressType\": \"HOME\",\n      \"country\": \"Russia\",\n      \"city\": \"Moscow\",\n      \"addressLine\": \"QQqweqweqwe\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser - 400 (Bad password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f02d901-1666-41f0-909e-f7d8f7353c24",
								"exec": [
									"pm.test(\"should return 400\", () => {",
									"    pm.expect(pm.response.code).be.eql(400);",
									"})",
									"",
									"pm.test(\"Shoud contains at least 6 charachters\", () => {",
									"    pm.expect(pm.response.json().description).be.eql(\"UserPassword: Should contains at least 6 characters\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"asdqwdasdasdasdaasfga2\",\n  \"password\": \"1\",\n  \"name\": {\n    \"firstName\": \"Tester\",\n    \"lastName\": \"Crypterium\",\n    \"middleName\": \"Otchestvo\"\n  },\n  \"email\": \"dsfdfsgdfjfdgdfhfgjdfgdfh2@crypterium.com\",\n  \"phone\" : \"18284729\",\n  \"birthday\": \"1993-10-17\",\n  \"citizenship\": \"RUS\",\n  \"addresses\": [\n    {\n      \"addressType\": \"HOME\",\n      \"country\": \"Russia\",\n      \"city\": \"Moscow\",\n      \"addressLine\": \"QQqweqweqwe\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "loginAsUserA - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec2aa437-5637-42ec-a5d8-c90f09ece622",
								"exec": [
									"pm.globals.set(\"userAAccessToken\", pm.response.json().accessToken)",
									"pm.globals.set(\"userARefreshToken\", pm.response.json().refreshToken)",
									"pm.globals.set(\"userAId\", pm.response.json().userId)",
									"",
									"pm.test(\"should return 200\", () => {",
									"    pm.expect(pm.response.code).be.eql(200);",
									"})",
									"",
									"pm.test(\"Schema validation\", () => {",
									"    pm.response.to.have.jsonBody('accessToken');",
									"    pm.response.to.have.jsonBody('expiryTime');",
									"    pm.response.to.have.jsonBody('refreshToken');",
									"    pm.response.to.have.jsonBody('userId');",
									"    console.log(pm.response.json().userId)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"{{UserALogin}}\",\n  \"password\": \"1q2w3e4r\",\n  \"system\": \"BANK\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "loginAsUserB- 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec2aa437-5637-42ec-a5d8-c90f09ece622",
								"exec": [
									"pm.globals.set(\"userBAccessToken\", pm.response.json().accessToken)",
									"pm.globals.set(\"userBRefreshToken\", pm.response.json().refreshToken)",
									"pm.globals.set(\"userBId\", pm.response.json().userId)",
									"",
									"pm.test(\"should return 200\", () => {",
									"    pm.expect(pm.response.code).be.eql(200);",
									"})",
									"",
									"pm.test(\"Schema validation\", () => {",
									"    pm.response.to.have.jsonBody('accessToken');",
									"    pm.response.to.have.jsonBody('expiryTime');",
									"    pm.response.to.have.jsonBody('refreshToken');",
									"    pm.response.to.have.jsonBody('userId');",
									"    console.log(pm.response.json().userId)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"{{UserBLogin}}\",\n  \"password\": \"1q2w3e4r\",\n  \"system\": \"BANK\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "loginAsAdmin - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "168f7247-6415-46a4-926f-ecfe63aca930",
								"exec": [
									"pm.globals.set(\"adminAccessToken\", pm.response.json().accessToken)",
									"pm.globals.set(\"adminRefreshToken\", pm.response.json().refreshToken)",
									"pm.globals.set(\"adminId\", pm.response.json().userId)",
									"",
									"pm.test(\"should return 200\", () => {",
									"    pm.expect(pm.response.code).be.eql(200);",
									"})",
									"",
									"pm.test(\"Schema validation\", () => {",
									"    pm.response.to.have.jsonBody('accessToken');",
									"    pm.response.to.have.jsonBody('expiryTime');",
									"    pm.response.to.have.jsonBody('refreshToken');",
									"    pm.response.to.have.jsonBody('userId');",
									"    console.log(pm.response.json().userId)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"admin\",\n  \"password\": \"password123\",\n  \"system\": \"BANK\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "token - 201",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "168f7247-6415-46a4-926f-ecfe63aca930",
								"exec": [
									"pm.globals.set(\"adminAccessToken\", pm.response.json().accessToken)",
									"pm.globals.set(\"adminRefreshToken\", pm.response.json().refreshToken)",
									"pm.globals.set(\"adminId\", pm.response.json().userId)",
									"",
									"pm.test(\"should return 201\", () => {",
									"    pm.expect(pm.response.code).be.eql(201);",
									"})",
									"",
									"pm.test(\"Schema validation\", () => {",
									"    pm.response.to.have.jsonBody('accessToken');",
									"    pm.response.to.have.jsonBody('expiryTime');",
									"    pm.response.to.have.jsonBody('refreshToken');",
									"    pm.response.to.have.jsonBody('userId');",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"refreshToken\" : \"{{adminRefreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/token",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "token - 401 (Bad data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "168f7247-6415-46a4-926f-ecfe63aca930",
								"exec": [
									"pm.test(\"should return 401\", () => {",
									"    pm.expect(pm.response.code).be.eql(401);",
									"})",
									"",
									"pm.test(\"Invalid token\", () => {",
									"    pm.expect(pm.response.json().description).be.eql(\"Invalid token\");",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"refreshToken\" : \"qwe\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/token",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "startVerification as Admin - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 201\", () => {",
									"    pm.expect(pm.response.code).be.equal(201);",
									"})",
									"",
									"tests[\"verification Schema Validation\"] = tv4.validate(pm.response.json(), JSON.parse(environment.verificationSchema));",
									"console.log(tv4.error);",
									"",
									"pm.globals.set(\"userAVerifyToken\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"EMAIL\",\n\t\"redirectUrl\" : \"http://qwe.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "startVerificationUserB as Admin - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 201\", () => {",
									"    pm.expect(pm.response.code).be.equal(201);",
									"})",
									"",
									"tests[\"verification Schema Validation\"] = tv4.validate(pm.response.json(), JSON.parse(environment.verificationSchema));",
									"console.log(tv4.error);",
									"",
									"pm.globals.set(\"userBVerifyToken\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"EMAIL\",\n\t\"redirectUrl\" : \"http://qwe.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userBId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "startVerification as UserA - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 201\", () => {",
									"    pm.expect(pm.response.code).be.equal(201);",
									"})",
									"",
									"tests[\"createUser Schema Validation\"] = tv4.validate(pm.response.json(), JSON.parse(environment.verificationSchema));",
									"console.log(tv4.error);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userAAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"EMAIL\",\n\t\"redirectUrl\" : \"http://qwe.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "startVerification - 400 (bad method)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 400\", () => {",
									"    pm.expect(pm.response.code).be.eql(400);",
									"})",
									"",
									"pm.test(\"Field login is required\", () => {",
									"    pm.expect(pm.response.json().description).be.eql(\"Wrong field value: method=qwe\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"qwe\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "startVerification - 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 401\", () => {",
									"    pm.expect(pm.response.code).be.equal(401);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"EMAIL\",\n\t\"redirectUrl\" : \"http://qwe.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "startVerification as UserB - 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 403\", () => {",
									"    pm.expect(pm.response.code).be.equal(403);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userBAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"EMAIL\",\n\t\"redirectUrl\" : \"http://qwe.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "startVerification - 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 404\", () => {",
									"    pm.expect(pm.response.code).be.equal(404);",
									"})",
									"",
									"pm.test(\"user not found\", () => {",
									"    pm.expect(pm.response.json().description).be.equal('User with id \\\"000000000000000000000000\\\" not found');",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"EMAIL\",\n\t\"redirectUrl\" : \"http://qwe.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"variable": [
								{
									"key": "userId",
									"value": "000000000000000000000000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "verifyToken as Admin - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 200\", () => {",
									"    pm.expect(pm.response.code).be.equal(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"EMAIL\",\n\t\"redirectUrl\" : \"http://qwe.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification?token={{userBVerifyToken}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"query": [
								{
									"key": "token",
									"value": "{{userBVerifyToken}}"
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userBId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "verifyToken as UserA - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 200\", () => {",
									"    pm.expect(pm.response.code).be.equal(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userAAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"EMAIL\",\n\t\"redirectUrl\" : \"http://qwe.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification?token={{userAVerifyToken}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"query": [
								{
									"key": "token",
									"value": "{{userAVerifyToken}}"
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "startVerification - 400 (already verified)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 400\", () => {",
									"    pm.expect(pm.response.code).be.eql(400);",
									"})",
									"",
									"pm.test(\"Email already verified\", () => {",
									"    pm.expect(pm.response.json().description).be.eql(\"Email already verified\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"EMAIL\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createUserA - 400 (Already exists)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 400\", () => {",
									"    pm.expect(pm.response.code).be.eql(400);",
									"})",
									"",
									"pm.test(\"User with login = 'usera' already exists\", () => {",
									"    pm.expect(pm.response.json().description).be.eql(\"User with login = '\" + pm.globals.get(\"UserALogin\").toLowerCase() + \"' already exists\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"{{UserALogin}}\",\n  \"password\": \"1q2w3e4r\",\n  \"name\": {\n    \"firstName\": \"User\",\n    \"lastName\": \"A\",\n    \"middleName\": \"\"\n  },\n  \"email\": \"{{UserAEmail}}\",\n  \"birthday\": \"\",\n  \"citizenship\": \"\",\n  \"addresses\": [\n    {\n      \"addressType\": \"HOME\",\n      \"country\": \"\",\n      \"city\": \"\",\n      \"addressLine\": \"\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "verifyToken - 400 (bad method)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 400\", () => {",
									"    pm.expect(pm.response.code).be.eql(400);",
									"})",
									"",
									"pm.test(\"Field token is required\", () => {",
									"    pm.expect(pm.response.json().message).be.eql(\"Required String parameter 'token' is not present\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"query": [
								{
									"key": "token",
									"value": "qwe",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "verifyToken - 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 401\", () => {",
									"    pm.expect(pm.response.code).be.equal(401);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"EMAIL\",\n\t\"redirectUrl\" : \"http://qwe.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "verifyToken - 404 (user not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 404\", () => {",
									"    pm.expect(pm.response.code).be.equal(404);",
									"})",
									"",
									"pm.test(\"user not found\", () => {",
									"    pm.expect(pm.response.json().description).be.equal('User with id \\\"000000000000000000000000\\\" not found');",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"EMAIL\",\n\t\"redirectUrl\" : \"http://qwe.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification?token={{userAVerifyToken}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"query": [
								{
									"key": "token",
									"value": "{{userAVerifyToken}}"
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "000000000000000000000000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "verifyToken - 404 (token not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d474a27e-f41e-42ff-869b-d5a2bfc9af58",
								"exec": [
									"pm.test(\"should return 404\", () => {",
									"    pm.expect(pm.response.code).be.equal(404);",
									"})",
									"",
									"pm.test(\"user not found\", () => {",
									"    pm.expect(pm.response.json().description).be.equal('Token \\\"000\\\" not found');",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"method\": \"EMAIL\",\n\t\"redirectUrl\" : \"http://qwe.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/verification?token=000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"verification"
							],
							"query": [
								{
									"key": "token",
									"value": "000"
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "loginAsUserA - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec2aa437-5637-42ec-a5d8-c90f09ece622",
								"exec": [
									"pm.globals.set(\"userAAccessToken\", pm.response.json().accessToken)",
									"pm.globals.set(\"userARefreshToken\", pm.response.json().refreshToken)",
									"pm.globals.set(\"userAId\", pm.response.json().userId)",
									"",
									"pm.test(\"should return 200\", () => {",
									"    pm.expect(pm.response.code).be.eql(200);",
									"})",
									"",
									"pm.test(\"Schema validation\", () => {",
									"    pm.response.to.have.jsonBody('accessToken');",
									"    pm.response.to.have.jsonBody('expiryTime');",
									"    pm.response.to.have.jsonBody('refreshToken');",
									"    pm.response.to.have.jsonBody('userId');",
									"    console.log(pm.response.json().userId)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"{{UserALogin}}\",\n  \"password\": \"1q2w3e4r\",\n  \"system\": \"BANK\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "loginAsUserB- 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec2aa437-5637-42ec-a5d8-c90f09ece622",
								"exec": [
									"pm.globals.set(\"userBAccessToken\", pm.response.json().accessToken)",
									"pm.globals.set(\"userBRefreshToken\", pm.response.json().refreshToken)",
									"pm.globals.set(\"userBId\", pm.response.json().userId)",
									"",
									"pm.test(\"should return 200\", () => {",
									"    pm.expect(pm.response.code).be.eql(200);",
									"})",
									"",
									"pm.test(\"Schema validation\", () => {",
									"    pm.response.to.have.jsonBody('accessToken');",
									"    pm.response.to.have.jsonBody('expiryTime');",
									"    pm.response.to.have.jsonBody('refreshToken');",
									"    pm.response.to.have.jsonBody('userId');",
									"    console.log(pm.response.json().userId)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"{{UserBLogin}}\",\n  \"password\": \"1q2w3e4r\",\n  \"system\": \"BANK\"\n}"
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "admin-management-resource",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "find UserA as Admin - 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6982170e-2717-427b-b715-d9eef58e10f6",
										"exec": [
											"pm.test(\"should return 200\", () => {",
											"    pm.expect(pm.response.code).be.equal(200);",
											"    console.log(pm.response.json().id);",
											"})",
											"",
											"pm.test(\"data is correct\", () => {",
											"    var json = pm.response.json();",
											"    pm.expect(json.id).be.eql(pm.globals.get(\"userAId\"));",
											"    pm.expect(json.login).be.eql(pm.globals.get(\"UserALogin\").toLowerCase());",
											"    pm.expect(json.contacts.email).be.eql(pm.globals.get(\"UserAEmail\").toLowerCase());",
											"})",
											"",
											"tests[\"createUser Schema Validation\"] = tv4.validate(pm.response.json(), JSON.parse(environment.createUserSchema));",
											"console.log(tv4.error);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user?query={{UserAEmail}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user"
									],
									"query": [
										{
											"key": "query",
											"value": "{{UserAEmail}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findUserA as NoAuth - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a1d67b6-326f-4782-a507-878986097c76",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.equal(401);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user?query={{UserAEmail}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user"
									],
									"query": [
										{
											"key": "query",
											"value": "{{UserAEmail}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "findUserA as User - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a1d67b6-326f-4782-a507-878986097c76",
										"exec": [
											"pm.test(\"should be forbidden\", function() {",
											"    pm.response.to.be.forbidden;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user?query={{UserAEmail}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user"
									],
									"query": [
										{
											"key": "query",
											"value": "{{UserAEmail}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "find UserA as Admin - 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6982170e-2717-427b-b715-d9eef58e10f6",
										"exec": [
											"pm.test(\"Should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"user should not be found\", () => {",
											"    pm.expect(pm.response.json().description).be.eql('User for query \"qwe\" not found');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user?query=qwe",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user"
									],
									"query": [
										{
											"key": "query",
											"value": "qwe"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "changeUserPassword as Admin 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3251599d-3500-49b0-b99b-b517754778db",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"password\": \"1q2w3e4r\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeUserPassword as NoAuth - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3251599d-3500-49b0-b99b-b517754778db",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.eql(401);",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"password\": \"1q2w3e4r\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeUserPassword as User - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3251599d-3500-49b0-b99b-b517754778db",
										"exec": [
											"pm.test(\"should return 403\", () => {",
											"    pm.expect(pm.response.code).be.eql(403);",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"password\": \"1q2w3e4r\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"port": "",
									"path": [
										"crypterium",
										"admin",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeUserPassword as Admin 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3251599d-3500-49b0-b99b-b517754778db",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"    pm.expect(pm.response.json().description).be.eql('User with id \"000000000000000000000000\" not found');",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"password\": \"1q2w3e4r\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "000000000000000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeUserPassword - Bad Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3251599d-3500-49b0-b99b-b517754778db",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"password is required\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"Field password is required\");",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"passwordQWWE\" : \"1q2w3e4r\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "user-citizen-id-resource",
			"item": [
				{
					"name": "changeCitizenId as UserA - 404 (No document)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
								"exec": [
									"pm.test(\"should return 404\", () => {",
									"    pm.expect(pm.response.code).be.eql(404);",
									"})",
									"",
									"pm.test(\"Passport doesn't exist\", () => {",
									"    var id = pm.globals.get(\"userAId\");",
									"    pm.expect(pm.response.json().description).be.eql('Citizen id with type \"PASSPORT\" for user \"' + id + '\" not found');",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userAAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"src": "file.txt",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"citizenId"
							],
							"query": [
								{
									"key": "docType",
									"value": "{{docType}}"
								},
								{
									"key": "number",
									"value": "1234 123456"
								},
								{
									"key": "issueDate",
									"value": "2010-10-10"
								},
								{
									"key": "issuer",
									"value": "Issuer_place"
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "addCitizenId as UserA - 201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "file.txt"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "PASSPORT"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Oct 2018 09:35:30 GMT"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.15.2"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "addCitizenId as UserA - 201",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 201\", () => {",
											"    pm.expect(pm.response.code).be.eql(201);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "file.txt"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "deleteCitizenId as Admin - 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 200\", () => {",
											"    pm.expect(pm.response.code).be.eql(200);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "addCitizenId as Admin - 201",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 201\", () => {",
											"    pm.expect(pm.response.code).be.eql(201);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"src": "file.txt",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "addCitizenId as Admin - 400 (already exists)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Passport already exists\", () => {",
											"    var id = pm.globals.get(\"userAId\");",
											"    pm.expect(pm.response.json().description).be.eql('Document with type \"PASSPORT\" for user \"' + id + '\" already exists.');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"src": "file.txt",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "addCitizenId as Admin - 400 (Wrong param)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Wrong parameter value\", () => {",
											"    pm.expect(pm.response.json().description).be.eql('Wrong parameter value: docType=PASSPORTqe');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"src": "file.txt",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}qe&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}qe"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "addCitizenId - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.eql(401);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"src": "file.txt",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "addCitizenId as UserB - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 403\", () => {",
											"    pm.expect(pm.response.code).be.eql(403);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userBAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"src": "file.txt",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "addCitizenId - 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"user not found\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"User with id \\\"000000000000000000000000\\\" not found\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"src": "file.txt",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "000000000000000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "addCitizenId as Admin - 400 (No file)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET",
					"item": [
						{
							"name": "getCitizenId as Admin - 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 200\", () => {",
											"    pm.expect(pm.response.code).be.eql(200);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "getCitizenId as UserA - 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 200\", () => {",
											"    pm.expect(pm.response.code).be.eql(200);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "getCitizenId - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.eql(401);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "getCitizenId as UserB - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 403\", () => {",
											"    pm.expect(pm.response.code).be.eql(403);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userBAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "getCitizenId  - 404 (No user)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"user not found\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"User with id \\\"000000000000000000000000\\\" not found\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "000000000000000000000000"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "changeCitizenId as UserA - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"src": "file.txt",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "changeCitizenId as Admin - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"src": "file.txt",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeCitizenId as Admin - 400 (Wrong param)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Passport already exists\", () => {",
											"    pm.expect(pm.response.json().description).be.eql('Wrong parameter value: docType=PASSPORTINO');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"src": "file.txt",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}INO&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}INO"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeCitizenId - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.eql(401);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"src": "file.txt",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeCitizenId as UserB - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 403\", () => {",
											"    pm.expect(pm.response.code).be.eql(403);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userBAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"src": "file.txt",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeCitizenId - 404 (No user)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"user not found\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"User with id \\\"000000000000000000000000\\\" not found\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"src": "file.txt",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "000000000000000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeCitizenId as Admin - 400 (No file)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a04671f1-65db-44b2-aa10-668b130b7add",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "deleteCitizenId as UserA - 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 200\", () => {",
											"    pm.expect(pm.response.code).be.eql(200);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "deleteCitizenId - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.eql(401);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "deleteCitizenId as UserB - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 403\", () => {",
											"    pm.expect(pm.response.code).be.eql(403);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userBAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "deleteCitizenId  - 404 (No user)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"user not found\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"User with id \\\"000000000000000000000000\\\" not found\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "000000000000000000000000"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "deleteCitizenId  - 404 (No document)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
										"exec": [
											"pm.test(\"should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"Document doesn't exist\", () => {",
											"    pm.expect(pm.response.json().description).be.eql('Citizen id with type \"' + pm.globals.get(\"docType\") + '\" for user \"' + pm.globals.get(\"userAId\") + '\" not found');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "{{docType}}"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "addCitizenId as UserA - 201",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
											"host": [
												"{{URL}}"
											],
											"path": [
												"crypterium",
												"user",
												":userId",
												"citizenId"
											],
											"query": [
												{
													"key": "docType",
													"value": "PASSPORT"
												},
												{
													"key": "number",
													"value": "1234 123456"
												},
												{
													"key": "issueDate",
													"value": "2010-10-10"
												},
												{
													"key": "issuer",
													"value": "Issuer_place"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{userAId}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 19 Oct 2018 09:35:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "nginx/1.15.2"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "getCitizenId  - 404 (No document)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23c4d14c-0811-4298-a828-bcf97732b1a2",
								"exec": [
									"pm.test(\"should return 404\", () => {",
									"    pm.expect(pm.response.code).be.eql(404);",
									"})",
									"",
									"pm.test(\"Document doesn't exist\", () => {",
									"    pm.expect(pm.response.json().description).be.eql('Citizen id with type \"' + pm.globals.get(\"docType\") + '\" for user \"' + pm.globals.get(\"userAId\") + '\" not found');",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType={{docType}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId",
								"citizenId"
							],
							"query": [
								{
									"key": "docType",
									"value": "{{docType}}"
								}
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "addCitizenId as UserA - 201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenId?docType=PASSPORT&number=1234 123456&issueDate=2010-10-10&issuer=Issuer_place",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenId"
									],
									"query": [
										{
											"key": "docType",
											"value": "PASSPORT"
										},
										{
											"key": "number",
											"value": "1234 123456"
										},
										{
											"key": "issueDate",
											"value": "2010-10-10"
										},
										{
											"key": "issuer",
											"value": "Issuer_place"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Oct 2018 09:35:30 GMT"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "nginx/1.15.2"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "user-profile-resource",
			"item": [
				{
					"name": "address",
					"item": [
						{
							"name": "changeAddress as Admin - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressType\": \"HOME\",\n  \"country\": \"Russia\",\n  \"city\": \"Moscow\",\n  \"addressLine\": \"Street\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/address",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"address"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeAddress as UserA - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressType\": \"HOME\",\n  \"country\": \"Russia\",\n  \"city\": \"Moscow\",\n  \"addressLine\": \"Street\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/address",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"address"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeAddress as Admin - 400 (wrong type)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Passport already exists\", () => {",
											"    pm.expect(pm.response.json().description).be.eql('Wrong field value: addressType=qwe');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressType\": \"qwe\",\n  \"country\": \"Russia\",\n  \"city\": \"Moscow\",\n  \"addressLine\": \"Street\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/address",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"address"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeAddress as Admin - 400 (bad data)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Passport already exists\", () => {",
											"    pm.expect(pm.response.json().description).be.eql('Field addressType is required');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/address",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"address"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeAddress - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.eql(401);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressType\": \"HOME\",\n  \"country\": \"Russia\",\n  \"city\": \"Moscow\",\n  \"addressLine\": \"Street\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/address",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"address"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeAddress as UserB - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 403\", () => {",
											"    pm.expect(pm.response.code).be.eql(403);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userBAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressType\": \"HOME\",\n  \"country\": \"Russia\",\n  \"city\": \"Moscow\",\n  \"addressLine\": \"Street\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/address",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"address"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeAddress as UserB - 404 (user not found)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"user not found\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"User with id \\\"000000000000000000000000\\\" not found\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addressType\": \"HOME\",\n  \"country\": \"Russia\",\n  \"city\": \"Moscow\",\n  \"addressLine\": \"Street\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/address",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"address"
									],
									"variable": [
										{
											"key": "userId",
											"value": "000000000000000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "birthday",
					"item": [
						{
							"name": "changeBirthday as Admin - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"birthday\": \"2018-10-19\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/birthday",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"birthday"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeBirthday as UserA - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"birthday\": \"2018-10-19\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/birthday",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"birthday"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeBirthday as Admin - 400 (bad data)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/birthday",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"birthday"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeBirthday - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.eql(401);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"birthday\": \"2018-10-19\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/birthday",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"birthday"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeBirthday as UserB - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 403\", () => {",
											"    pm.expect(pm.response.code).be.eql(403);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userBAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"birthday\": \"2018-10-19\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/birthday",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"birthday"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeBirthday as UserB - 404 (user not found)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"user not found\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"User with id \\\"000000000000000000000000\\\" not found\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"birthday\": \"2018-10-19\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/birthday",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"birthday"
									],
									"variable": [
										{
											"key": "userId",
											"value": "000000000000000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "citizenship",
					"item": [
						{
							"name": "changeCitizenship as Admin - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"citizenship\": \"Russia\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenship",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenship"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeCitizenship as UserA - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"citizenship\": \"Russia\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenship",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenship"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeCitizenship as Admin - 400 (bad data)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Passport already exists\", () => {",
											"    pm.expect(pm.response.json().description).be.eql('Field citizenship is required');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"citizenship1\": \"Russia\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenship",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenship"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeCitizenship - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.eql(401);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"citizenship\": \"Russia\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenship",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenship"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeCitizenship as UserB - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 403\", () => {",
											"    pm.expect(pm.response.code).be.eql(403);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userBAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"citizenship\": \"Russia\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenship",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenship"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeCitizenship as UserB - 404 (user not found)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"user not found\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"User with id \\\"000000000000000000000000\\\" not found\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"citizenship\": \"Russia\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/citizenship",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"citizenship"
									],
									"variable": [
										{
											"key": "userId",
											"value": "000000000000000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "contacts",
					"item": [
						{
							"name": "changeContacts as Admin - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{UserAEmail}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/contacts",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"contacts"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeContacts as UserA - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{UserAEmail}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/contacts",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"contacts"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeContacts as Admin - 400 (wrong email)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Passport already exists\", () => {",
											"    pm.expect(pm.response.json().description).be.eql('UserEmail: Should be valid email');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/contacts",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"contacts"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeContacts as Admin - 400 (wrong phone)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Passport already exists\", () => {",
											"    pm.expect(pm.response.json().description).be.eql('UserPhone: Should contain only numbers with optional + before them');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"phone\": \"\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/contacts",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"contacts"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeContacts as Admin - 400 (bad data)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Passport already exists\", () => {",
											"    pm.expect(pm.response.json().description).be.eql('Contacts: At least one contact must present');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/contacts",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"contacts"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeContacts - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.eql(401);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"email\": \"{{UserAEmail}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/contacts",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"contacts"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeContacts as UserB - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 403\", () => {",
											"    pm.expect(pm.response.code).be.eql(403);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userBAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"email\": \"{{UserAEmail}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/contacts",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"contacts"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeContacts as UserB - 404 (user not found)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"user not found\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"User with id \\\"000000000000000000000000\\\" not found\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{UserAEmail}}\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/contacts",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"contacts"
									],
									"variable": [
										{
											"key": "userId",
											"value": "000000000000000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "password",
					"item": [
						{
							"name": "changePassword as Admin - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"oldPassword\": \"1q2w3e4r\",\n  \"newPassword\": \"4r3e2w1q\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changePassword as UserA - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"oldPassword\": \"4r3e2w1q\",\n  \"newPassword\": \"1q2w3e4r\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changePassword as Admin - 400 (no old pass)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Passport already exists\", () => {",
											"    pm.expect(pm.response.json().description).be.eql('Field oldPassword is required');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n  \"newPassword\": \"1q2w3e4r\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changePassword as Admin - 400 (no new pass)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Passport already exists\", () => {",
											"    pm.expect(pm.response.json().description).be.eql('Field newPassword is required');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"oldPassword\": \"4r3e2w1q\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changePassword as Admin - 400 (wrong pass)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Passport already exists\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"UserPassword: Old password doesn\\'t match\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"oldPassword\": \"\",\n  \"newPassword\": \"1\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changePassword as Admin - 400 (same pass)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											"",
											"pm.test(\"Passport already exists\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"UserPassword: New password must be different from current\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"oldPassword\": \"\",\n  \"newPassword\": \"\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changePassword - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.eql(401);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"oldPassword\": \"4r3e2w1q\",\n  \"newPassword\": \"1q2w3e4r\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changePassword as UserB - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 403\", () => {",
											"    pm.expect(pm.response.code).be.eql(403);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userBAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"oldPassword\": \"4r3e2w1q\",\n  \"newPassword\": \"1q2w3e4r\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changePassword as UserB - 404 (user not found)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"user not found\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"User with id \\\"000000000000000000000000\\\" not found\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"oldPassword\": \"4r3e2w1q\",\n  \"newPassword\": \"1q2w3e4r\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/password",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "000000000000000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "username",
					"item": [
						{
							"name": "changeUsername as Admin - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Alexander\",\n  \"lastName\": \"Tester\",\n  \"middleName\": \"Crypteriumovich\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/username",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"username"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeUsername as UserA - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.eql(204);",
											"    pm.response.to.not.have.body();",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Alexander\",\n  \"lastName\": \"Tester\",\n  \"middleName\": \"Crypteriumovich\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/username",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"username"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeUsername as Admin - 400 (bad data)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/username",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"username"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeUsername - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.eql(401);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Alexander\",\n  \"lastName\": \"Tester\",\n  \"middleName\": \"Crypteriumovich\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/username",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"username"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeUsername as UserB - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 403\", () => {",
											"    pm.expect(pm.response.code).be.eql(403);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userBAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Alexander\",\n  \"lastName\": \"Tester\",\n  \"middleName\": \"Crypteriumovich\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/username",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"username"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "changeUsername as UserB - 404 (user not found)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86eb1827-84a4-4a4e-8987-537628b60ee6",
										"exec": [
											"pm.test(\"should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"user not found\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"User with id \\\"000000000000000000000000\\\" not found\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Alexander\",\n  \"lastName\": \"Tester\",\n  \"middleName\": \"Crypteriumovich\"\n}"
								},
								"url": {
									"raw": "{{URL}}/crypterium/user/:userId/username",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"user",
										":userId",
										"username"
									],
									"variable": [
										{
											"key": "userId",
											"value": "000000000000000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "user-management-resource",
			"item": [
				{
					"name": "getUser as Admin - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e4e8341-ad4d-48ac-b96d-3d932462476f",
								"exec": [
									"pm.test(\"should return 200\", () => {",
									"    pm.expect(pm.response.code).be.equal(200);",
									"})",
									"",
									"tests[\"createUser Schema Validation\"] = tv4.validate(pm.response.json(), JSON.parse(environment.createUserSchema));",
									"console.log(tv4.error);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getUser as UserA - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e4e8341-ad4d-48ac-b96d-3d932462476f",
								"exec": [
									"pm.test(\"should return 200\", () => {",
									"    pm.expect(pm.response.code).be.equal(200);",
									"})",
									"",
									"tests[\"createUser Schema Validation\"] = tv4.validate(pm.response.json(), JSON.parse(environment.createUserSchema));",
									"console.log(tv4.error);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userAAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getUser - 400 (Bad data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e4e8341-ad4d-48ac-b96d-3d932462476f",
								"exec": [
									"pm.test(\"should return 400\", () => {",
									"    pm.expect(pm.response.code).be.equal(400);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "qwe"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getUser - 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e4e8341-ad4d-48ac-b96d-3d932462476f",
								"exec": [
									"pm.test(\"should return 401\", () => {",
									"    pm.expect(pm.response.code).be.equal(401);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "qwe",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getUser as UserB - 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e4e8341-ad4d-48ac-b96d-3d932462476f",
								"exec": [
									"pm.test(\"should return 403\", () => {",
									"    pm.expect(pm.response.code).be.equal(403);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userBAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userAId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getUser as Admin - 404 (No user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e4e8341-ad4d-48ac-b96d-3d932462476f",
								"exec": [
									"pm.test(\"should return 404\", () => {",
									"    pm.expect(pm.response.code).be.equal(404);",
									"})",
									"",
									"pm.test(\"user not found\", () => {",
									"    pm.expect(pm.response.json().description).be.equal('User with id \\\"000000000000000000000000\\\" not found');",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{URL}}/crypterium/user/:userId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"crypterium",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "000000000000000000000000"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "deleteUser",
			"item": [
				{
					"name": "DELETE",
					"item": [
						{
							"name": "deleteUser as Admin - 204",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e4e8341-ad4d-48ac-b96d-3d932462476f",
										"exec": [
											"pm.test(\"should return 204\", () => {",
											"    pm.expect(pm.response.code).be.equal(204);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user/:userId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteUser as Admin - 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e4e8341-ad4d-48ac-b96d-3d932462476f",
										"exec": [
											"pm.test(\"should return 400\", () => {",
											"    pm.expect(pm.response.code).be.eql(400);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user/:userId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "qwe"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteUser as User - 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e4e8341-ad4d-48ac-b96d-3d932462476f",
										"exec": [
											"pm.test(\"should return 401\", () => {",
											"    pm.expect(pm.response.code).be.equal(401);",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "qwe",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user/:userId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteUser as User - 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e4e8341-ad4d-48ac-b96d-3d932462476f",
										"exec": [
											"pm.test(\"should return 403\", () => {",
											"    pm.expect(pm.response.code).be.equal(403);",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userAAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user/:userId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userAId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteUser as Admin - 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e4e8341-ad4d-48ac-b96d-3d932462476f",
										"exec": [
											"pm.test(\"should return 404\", () => {",
											"    pm.expect(pm.response.code).be.eql(404);",
											"})",
											"",
											"pm.test(\"user not found\", () => {",
											"    pm.expect(pm.response.json().description).be.eql(\"User with id \\\"000000000000000000000000\\\" not found\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{URL}}/crypterium/admin/user/:userId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"crypterium",
										"admin",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "000000000000000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "qwe",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "8ad5a212-72d9-4a55-a0cb-7b40e4fec245",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "da3bbaa6-2aca-4f37-89e3-f6bdf56046a7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}